#!/bin/bash
#SBATCH --partition=thin
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=18
#SBATCH --time=00:45:00
#SBATCH --mem=12000M
#SBATCH --job-name=gs_dry
#SBATCH --array=1-220   # Adjust the range (1-n) to the number of n instances you want to run
#SBATCH --output=logs2/output_gs_dry_%A_%a.log
#SBATCH --error=logs2/error_gs_dry_%A_%a.log

# Load any required modules or environments (if needed)
module purge
module load 2021
module load Anaconda3/2021.05

# Your job starts in the directory where you call sbatch
# Activate your environment

source activate LC

# Change to the working directory (where your Python script is located)
cd $HOME/Projects/LCOpt

algos=("GridSearch")
segments=(1 2 3 4)
repeats=(1)
iters=(10 5 4 3)
samples=("sample1" "sample2" "sample3" "sample4" "sample5" "sample6" "sample7" "sample8" "sample_mix_2dist" "sample_mix_3dist" "sample_real.csv")
wet=(False)
# note that peak_purity only uses dry, and is super expensive.
# note that everything using Kaiser uses wet, these are sum_of_kais, prod_of_kais, tyteca28, tyteca35, tyteca40
crfs=('sum_of_res' 'prod_of_res' 'tyteca11' 'tyteca24' 'crf')

# how many combinations of parameters are there?
# 1 * 4 * 1 * 1 * 11* 1 * 5 = 220

# Calculate the indices for each option based on the task ID
task_id=$((SLURM_ARRAY_TASK_ID - 1))
algo_index=$((task_id % 1))
task_id=$((task_id / 1))
segment_index=$((task_id % 4))
task_id=$((task_id / 4))
repeat_index=$((task_id % 1))
task_id=$((task_id / 1))
sample_index=$((task_id % 11))
task_id=$((task_id / 11))
wet_index=$((task_id % 1))
task_id=$((task_id / 1))
crf_index=$((task_id % 5))

# Retrieve the specific options for each parameter based on the calculated indices
algo=${algos[algo_index]}
segment=${segments[segment_index]}
repeat=${repeats[repeat_index]}
iter=${iters[segment_index]}
sample=${samples[sample_index]}
wet_value=${wet[wet_index]}
crf=${crfs[crf_index]}

#srun python meta_experiment.py GridSearch 1 1 15 sample1 False tyteca11
# Execute your Python script with the selected options
srun python meta_experiment.py "$algo" "$segment" "$repeat" "$iter" "$sample" "$wet_value" "$crf"
